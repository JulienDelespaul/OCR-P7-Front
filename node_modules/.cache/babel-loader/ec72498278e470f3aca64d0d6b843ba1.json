{"ast":null,"code":"import { DoubleIndexedKV } from './double-indexed-kv';\n\nvar Registry =\n/** @class */\nfunction () {\n  function Registry(generateIdentifier) {\n    this.generateIdentifier = generateIdentifier;\n    this.kv = new DoubleIndexedKV();\n  }\n\n  Registry.prototype.register = function (value, identifier) {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var alreadyRegistered = this.kv.getByKey(identifier);\n\n      if (alreadyRegistered && alreadyRegistered !== value) {\n        console.debug(\"Ambiguous class \\\"\" + identifier + \"\\\", provide a unique identifier.\");\n      }\n    }\n\n    this.kv.set(identifier, value);\n  };\n\n  Registry.prototype.clear = function () {\n    this.kv.clear();\n  };\n\n  Registry.prototype.getIdentifier = function (value) {\n    return this.kv.getByValue(value);\n  };\n\n  Registry.prototype.getValue = function (identifier) {\n    return this.kv.getByKey(identifier);\n  };\n\n  return Registry;\n}();\n\nexport { Registry };","map":{"version":3,"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;;AAEA;AAAA;AAAA;EAGE,kBAA6BC,kBAA7B,EAAiE;IAApC;IAFrB,UAAK,IAAID,eAAJ,EAAL;EAE6D;;EAErEE,wCAASC,KAAT,EAAmBC,UAAnB,EAAsC;IACpC,IAAI,KAAKC,EAAL,CAAQC,UAAR,CAAmBH,KAAnB,CAAJ,EAA+B;MAC7B;IACD;;IAED,IAAI,CAACC,UAAL,EAAiB;MACfA,UAAU,GAAG,KAAKH,kBAAL,CAAwBE,KAAxB,CAAb;IACD;;IAED,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAMC,iBAAiB,GAAG,KAAKL,EAAL,CAAQM,QAAR,CAAiBP,UAAjB,CAA1B;;MACA,IAAIM,iBAAiB,IAAIA,iBAAiB,KAAKP,KAA/C,EAAsD;QACpDS,OAAO,CAACC,KAAR,CACE,uBAAoBT,UAApB,GAA8B,kCADhC;MAGD;IACF;;IAED,KAAKC,EAAL,CAAQS,GAAR,CAAYV,UAAZ,EAAwBD,KAAxB;EACD,CAnBD;;EAqBAD;IACE,KAAKG,EAAL,CAAQU,KAAR;EACD,CAFD;;EAIAb,6CAAcC,KAAd,EAAsB;IACpB,OAAO,KAAKE,EAAL,CAAQC,UAAR,CAAmBH,KAAnB,CAAP;EACD,CAFD;;EAIAD,wCAASE,UAAT,EAA2B;IACzB,OAAO,KAAKC,EAAL,CAAQM,QAAR,CAAiBP,UAAjB,CAAP;EACD,CAFD;;EAGF;AAAC,CArCD","names":["DoubleIndexedKV","generateIdentifier","Registry","value","identifier","kv","getByValue","process","env","NODE_ENV","alreadyRegistered","getByKey","console","debug","set","clear"],"sources":["/home/julien/Bureau/P7 Front/OCR-P7-Front/node_modules/superjson/src/registry.ts"],"sourcesContent":["import { DoubleIndexedKV } from './double-indexed-kv';\n\nexport class Registry<T> {\n  private kv = new DoubleIndexedKV<string, T>();\n\n  constructor(private readonly generateIdentifier: (v: T) => string) {}\n\n  register(value: T, identifier?: string): void {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const alreadyRegistered = this.kv.getByKey(identifier);\n      if (alreadyRegistered && alreadyRegistered !== value) {\n        console.debug(\n          `Ambiguous class \"${identifier}\", provide a unique identifier.`\n        );\n      }\n    }\n\n    this.kv.set(identifier, value);\n  }\n\n  clear(): void {\n    this.kv.clear();\n  }\n\n  getIdentifier(value: T) {\n    return this.kv.getByValue(value);\n  }\n\n  getValue(identifier: string) {\n    return this.kv.getByKey(identifier);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}