{"ast":null,"code":"import * as React from 'react';\n\nfunction useMediaQuery(query) {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n  }); // Watch for changes\n\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Create a matcher\n      const matcher = window.matchMedia(query); // Create our handler\n\n      const onChange = _ref => {\n        let {\n          matches\n        } = _ref;\n        return setIsMatch(matches);\n      }; // Listen for changes\n\n\n      matcher.addListener(onChange);\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange);\n      };\n    }\n  }, [isMatch, query, setIsMatch]);\n  return isMatch;\n}\n\nexport { useMediaQuery as default };","map":{"version":3,"mappings":";;AAEe,SAASA,aAAT,CAAuBC,KAAvB,EAA2D;EACxE;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,KAAK,CAACC,QAAND,CAAe,MAAM;IACjD,IAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;MACjC,OAAOA,MAAM,CAACC,UAAPD,CAAkBL,KAAlBK,EAAyBE,OAAhC;IACD;EAH2B,EAA9B,CAFwE;;EASxEJ,KAAK,CAACK,SAANL,CAAgB,MAAM;IACpB,IAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;MACjC;MACA,MAAMI,OAAO,GAAGJ,MAAM,CAACC,UAAPD,CAAkBL,KAAlBK,CAAhB,CAFiC;;MAKjC,MAAMK,QAAQ,GAAG;QAAA,IAAC;UAAEH;QAAF,CAAD;QAAA,OACfL,UAAU,CAACK,OAAD,CADK;MAAA,CAAjB,CALiC;;;MASjCE,OAAO,CAACE,WAARF,CAAoBC,QAApBD;MAEA,OAAO,MAAM;QACX;QACAA,OAAO,CAACG,cAARH,CAAuBC,QAAvBD;MAFF;IAID;EAhBH,GAiBG,CAACR,OAAD,EAAUD,KAAV,EAAiBE,UAAjB,CAjBHC;EAmBA,OAAOF,OAAP;AACD","names":["useMediaQuery","query","isMatch","setIsMatch","React","useState","window","matchMedia","matches","useEffect","matcher","onChange","addListener","removeListener"],"sources":["/home/julien/Dropbox/Formation OpenClassroom/Projet 7 Front/node_modules/@tanstack/react-query-devtools/src/useMediaQuery.ts"],"sourcesContent":["import * as React from 'react'\n\nexport default function useMediaQuery(query: string): boolean | undefined {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches\n    }\n  })\n\n  // Watch for changes\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Create a matcher\n      const matcher = window.matchMedia(query)\n\n      // Create our handler\n      const onChange = ({ matches }: { matches: boolean }) =>\n        setIsMatch(matches)\n\n      // Listen for changes\n      matcher.addListener(onChange)\n\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange)\n      }\n    }\n  }, [isMatch, query, setIsMatch])\n\n  return isMatch\n}\n"]},"metadata":{},"sourceType":"module"}