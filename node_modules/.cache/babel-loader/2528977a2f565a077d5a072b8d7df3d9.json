{"ast":null,"code":"import * as React from 'react';\n\nconst getItem = key => {\n  try {\n    const itemValue = localStorage.getItem(key);\n\n    if (typeof itemValue === 'string') {\n      return JSON.parse(itemValue);\n    }\n\n    return undefined;\n  } catch {\n    return undefined;\n  }\n};\n\nfunction useLocalStorage(key, defaultValue) {\n  const [value, setValue] = React.useState();\n  React.useEffect(() => {\n    const initialValue = getItem(key);\n\n    if (typeof initialValue === 'undefined' || initialValue === null) {\n      setValue(typeof defaultValue === 'function' ? defaultValue() : defaultValue);\n    } else {\n      setValue(initialValue);\n    }\n  }, [defaultValue, key]);\n  const setter = React.useCallback(updater => {\n    setValue(old => {\n      let newVal = updater;\n\n      if (typeof updater == 'function') {\n        newVal = updater(old);\n      }\n\n      try {\n        localStorage.setItem(key, JSON.stringify(newVal));\n      } catch {}\n\n      return newVal;\n    });\n  }, [key]);\n  return [value, setter];\n}\n\nexport { useLocalStorage as default };","map":{"version":3,"mappings":";;AAEA,MAAMA,OAAO,GAAIC,GAAD,IAA0B;EACxC,IAAI;IACF,MAAMC,SAAS,GAAGC,YAAY,CAACH,OAAbG,CAAqBF,GAArBE,CAAlB;;IACA,IAAI,OAAOD,SAAP,KAAqB,QAAzB,EAAmC;MACjC,OAAOE,IAAI,CAACC,KAALD,CAAWF,SAAXE,CAAP;IACD;;IACD,OAAOE,SAAP;EALF,EAME,MAAM;IACN,OAAOA,SAAP;EACD;AATH;;AAYe,SAASC,eAAT,CACbN,GADa,EAEbO,YAFa,EAG+C;EAC5D,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,KAAK,CAACC,QAAND,EAA1B;EAEAA,KAAK,CAACE,SAANF,CAAgB,MAAM;IACpB,MAAMG,YAAY,GAAGd,OAAO,CAACC,GAAD,CAA5B;;IAEA,IAAI,OAAOa,YAAP,KAAwB,WAAxB,IAAuCA,YAAY,KAAK,IAA5D,EAAkE;MAChEJ,QAAQ,CACN,OAAOF,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,EAAjD,GAAsDA,YADhD,CAARE;IADF,OAIO;MACLA,QAAQ,CAACI,YAAD,CAARJ;IACD;EATH,GAUG,CAACF,YAAD,EAAeP,GAAf,CAVHU;EAYA,MAAMI,MAAM,GAAGJ,KAAK,CAACK,WAANL,CACZM,OAAD,IAAkB;IAChBP,QAAQ,CAAEQ,GAAD,IAAS;MAChB,IAAIC,MAAM,GAAGF,OAAb;;MAEA,IAAI,OAAOA,OAAP,IAAkB,UAAtB,EAAkC;QAChCE,MAAM,GAAGF,OAAO,CAACC,GAAD,CAAhBC;MACD;;MACD,IAAI;QACFhB,YAAY,CAACiB,OAAbjB,CAAqBF,GAArBE,EAA0BC,IAAI,CAACiB,SAALjB,CAAee,MAAff,CAA1BD;MADF,EAEE,MAAM,CAAE;;MAEV,OAAOgB,MAAP;IAVM,EAART;EAFW,GAeb,CAACT,GAAD,CAfaU,CAAf;EAkBA,OAAO,CAACF,KAAD,EAAQM,MAAR,CAAP;AACD","names":["getItem","key","itemValue","localStorage","JSON","parse","undefined","useLocalStorage","defaultValue","value","setValue","React","useState","useEffect","initialValue","setter","useCallback","updater","old","newVal","setItem","stringify"],"sources":["/home/julien/Desktop/ubuntu save files/Dropbox/Formation OpenClassroom/Projet 7 Front/node_modules/@tanstack/react-query-devtools/src/useLocalStorage.ts"],"sourcesContent":["import * as React from 'react'\n\nconst getItem = (key: string): unknown => {\n  try {\n    const itemValue = localStorage.getItem(key)\n    if (typeof itemValue === 'string') {\n      return JSON.parse(itemValue)\n    }\n    return undefined\n  } catch {\n    return undefined\n  }\n}\n\nexport default function useLocalStorage<T>(\n  key: string,\n  defaultValue: T | undefined,\n): [T | undefined, (newVal: T | ((prevVal: T) => T)) => void] {\n  const [value, setValue] = React.useState<T>()\n\n  React.useEffect(() => {\n    const initialValue = getItem(key) as T | undefined\n\n    if (typeof initialValue === 'undefined' || initialValue === null) {\n      setValue(\n        typeof defaultValue === 'function' ? defaultValue() : defaultValue,\n      )\n    } else {\n      setValue(initialValue)\n    }\n  }, [defaultValue, key])\n\n  const setter = React.useCallback(\n    (updater: any) => {\n      setValue((old) => {\n        let newVal = updater\n\n        if (typeof updater == 'function') {\n          newVal = updater(old)\n        }\n        try {\n          localStorage.setItem(key, JSON.stringify(newVal))\n        } catch {}\n\n        return newVal\n      })\n    },\n    [key],\n  )\n\n  return [value, setter]\n}\n"]},"metadata":{},"sourceType":"module"}